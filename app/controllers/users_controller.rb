=begin
Swagger atNuda

This is a sample atNuda server.  You can find  out more about Swagger at  [http://swagger.io](http://swagger.io) or on  [irc.freenode.net, #swagger](http://swagger.io/irc/). 

OpenAPI spec version: 1.0.0
Contact: xe314m@gmail.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end
class UsersController < ApplicationController
  USER_ERROR400_JSON = {"error": { "status": 400, "message": "Invalid uuid supplied" } }
  USER_ERROR404_JSON = {"error": { "status": 404, "message": "Invalid User not found" } }
  PAGE_ERROR400_JSON = {"error": { "status": 400, "message": "Invalid page supplied" } }
  PAGE_ERROR404_JSON = {"error": { "status": 404, "message": "Invalid page not found" } }

  def destroy
    # Your code here

    bad_request
    not_found
    render json: { date: {status: 200, "message" => "OK" } } unless error?
  end

  def get_portfolios_of_user_by_uuid

    json = {
      data: {
        "uuid": "userxxxxxxx1",
        "name": "john",
        "position": ["フロントエンド", "デザイナー"],
        "status": "転職中",
        "user_large_image_url": "https://user1-large.com/",
        "user_small_images_url": "https://user-small1.com/",
        "portforios": [
            {
              "uuid": "portxxxxxxx1",
              "site_url": "https://site1.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx2",
              "site_url": "https://site2.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx3",
              "site_url": "https://site3.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx4",
              "site_url": "https://site4.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx5",
              "site_url": "https://site5.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx6",
              "site_url": "https://site6.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx7",
              "site_url": "https://site7.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx8",
              "site_url": "https://site8.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx9",
              "site_url": "https://site9.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx10",
              "site_url": "https://site10.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx11",
              "site_url": "https://site11.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx12",
              "site_url": "https://site12.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx13",
              "site_url": "https://site13.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx14",
              "site_url": "https://site14.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
            {
              "uuid": "portxxxxxxx15",
              "site_url": "https://site15.com/",
              "image_urls": [
                "https://image.com/1",
                "https://image.com/2",
                "https://image.com/3"
              ],
            },
          ]
        }
      }

    bad_request
    not_found
    render json: json unless error?
  end

  def update
    # Your code here
    
    bad_request
    not_found
    render json: { "date": {"status": 200, "message" => "OK" } } unless error?
  end
end
